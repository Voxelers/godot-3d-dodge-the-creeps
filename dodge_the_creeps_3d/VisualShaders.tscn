[gd_scene load_steps=12 format=2]

[ext_resource path="res://noisetexture.tres" type="Texture" id=1]

[sub_resource type="SphereMesh" id=1]

[sub_resource type="VisualShaderNodeInput" id=2]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=9]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Input:3
	float n_out3p0 = TIME;

// ScalarFunc:4
	float n_out4p0 = sin(n_out3p0);

// ScalarOp:6
	float n_in6p1 = 2.00000;
	float n_out6p0 = n_out4p0 / n_in6p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out6p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// Output:0
	ALPHA = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -529.306, -258.878 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 480, -300 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -440, 180 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -800, 480 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -600, 480 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -220, 460 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -220, 140 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 0, 300 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 220, 300 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 7, 0, 7, 0, 8, 0, 6, 0, 8, 1, 8, 0, 9, 0, 4, 0, 6, 0, 9, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )

[node name="Spatial" type="Spatial"]

[node name="CSGBox" type="CSGBox" parent="."]
width = 10.0
height = 0.5
depth = 10.0

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.866025, 0.5, 0, -0.5, 0.866025, 0, 6, 9 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.395017, 0.918674, 0, -0.918674, 0.395017, 0, 2.9392, 0.266076 )

[node name="Sphere" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.389781, 0.703391, -0.715828 )
mesh = SubResource( 1 )
material/0 = SubResource( 10 )
